<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/9sAQwAQCwsLDAsQDAwQFw8NDxcbFBAQ
        FBsfFxcXFxcfHhcaGhoaFx4eIyUnJSMeLy8zMy8vQEBAQEBAQEBAQEBAQEBA/9sAQwERDw8RExEVEhIV
        FBEUERQaFBYWFBomGhocGhomMCMeHh4eIzArLicnJy4rNTUwMDU1QEA/QEBAQEBAQEBAQEBA/8AAEQgA
        yAELAwEiAAIRAQMRAf/EABsAAAEFAQEAAAAAAAAAAAAAAAUAAQMEBgIH/8QAOxAAAQMCBQMBBQcDAwQD
        AAAAAQACAxEEITFBEgVRYSITcYEyQlKRocHRIxQGseFy8GIzgkMVFqLiJP/EABgBAAMBAQAAAAAAAAAA
        AAAAAAABAgME/8QALREAAgICAQMCBAUFAAAAAAAAAAERAiExEkFRA2GRcYEyBKGxIkITwdHhUhT/2gAM
        AwEAAhEDEQA/ANyAuwEwT1CZIiQM1H+6gDtu8V6VQbn718U8cIfQEVICoNlLzVY383FwkdHj+35VTb2a
        W9u221s+bPaMFlLuZ3If85qNB0Vm6kmntjDu8UJa8wv2yYd1nfyctSjbxeJUnkkyOXjHsO6A+5PHPJEQ
        2TAohDKw0I1UslvFOMRj1WTt3N0kiq2USChyVe4sGSeUeDlJNYXEPlCdw6KFl5JGdsrdru6E+wNJlM/v
        LU4tJA1Cu2/Jb2gONHdEQhmilaN4BquZeNs5sQ3a7QhDdXtQKLL/ACKO6JIxVhlxvO0ivdCZbK7tqmMm
        RgULL5wO1/g4e5S69UOV1wHpLaKXSh7KJ1rM0eB3dlTh5NwIqa90UiuN4DsAeyWtjcrQP/cSwu2vB7q7
        FOx4qCpniGT/AJGjuqj7Nm6sDqDojATO0XYuSuIjRj6gaOxCIQ80w4Stp3b+SzU7J4fINLx2UbbxwfR1
        R7c1pW966Znbw+O3T2wbaK8tpvgkBPQ4FTLEsuQXChwRGDkriHCN5LfpdiFqvP8A7L2MbfaPdX7mlSQu
        35pjsJmUOpbj9yvxXdvN8DwT0yK1r5KPTMLeO9dpkySZJWQOkkkgBJJJIASZOkgDkhc0C7TUQADvuYdH
        cmCGnh8RPVVY+UuxNue6ra129lS/kEU9pfmelYZNRoVDBcteK1XL5LXVtvZ2eKnjdVhayW+eYy6iF5Gf
        1GD7uiEWV6XChOKJFwkaWnIoTecbJCTNbnuWqXfk8o0rTioTlBaGbcMU81syZnkPeg9rd7QA8kO6Ipb3
        LXitfcoa6ovZTfHPamucas216x1KlWyWPGx2NdEPuuOMZMsHtLUb2LK0EmTNPcJTW9vcto5oqUFhu3B2
        x1WuGhRGC4ck6wNOdFebjbiA7rd1QPlTR38sZDZgWnuicc2W9dSW8FwCHtB7pT3HJFDcMkGYKr3dhb3I
        JcNrvqC4m4qWB2+2dUfSVF+5mDhHKCwjPumn2YQmD57C6tnbmfqR/eng5GSM0xaAjsUsUjdp6KC54qOa
        rmeJOoVck94JhrRBFyjXja93vVuK9acAUBurC7tXFwbvZ1Cjg5J7PEtpRDr2BWWmaplxXpjouZLOCdhc
        4eXVB4OSD8jir8d+aYipGoU8WtFOOgjxjovKN+GgKZ77iIeTaEajEKdl5uxOR0Uu/c2gAHTujPVDTZUi
        uqk7hU9QpG3DwcAT0XT4IJMXAseOmSrjcx1A7cBloUwlBO15W6iw3Fw6OxCIxc9DlNG5n+4YhZp85boW
        uy7JRTyOfQvFctvdXW9lp/Izv4PHba+aNpBd21yKwyNf1AOI9ymWMG9jmvZ4PrgWmn9EUt+buowGzbZe
        58Xfkta+dfux8Dnv9rZfQ+Xp1NAkqEHM2cp2vd6L/pfgPc7JXQ4OALSCDkQtlattOTntW1cWTR0kmTpi
        GSTpkABrq8sbm0Pr0rTEFYmWdkVw5sZ8K4BaQxNcOxQTkuIcHGaHHUhcj8vLFsHWvHwc1eOxLa3VRVXW
        yh2YWcinfG6hzGYRG3va0FVNqm1bST3XHwzecXjKMlRHqwOEcmBGoRVsrTjqubm2juG0cKYYEZqVKLjs
        c20+4biakaaq62VrhhigTrea2kFauaciFdgumtwBpXVNqRInu7CO48meMnUITI67s5Nsnw/UjkbztD6+
        J1SkZFMPTkFapJ9Ng69UUYLmoBDqnoVZjneMA5Urri5YP1Larmat1VeC8zbIKHuqhNShKz0w825dTHEp
        OZFcCkrQaoZFcg517FXIJCBnVZtQXjoRycdJEd1u6o+kpmX0kTtkrSympV31dxAINAupIYZmbHjdXqlP
        cPicxTxzsrgQc1QvuBiuKyQHY89MlL/4ySFxdbPoNGOyTR380LgyVhae+XuKabX0slpMztxY3dk4iRpA
        +oZJobyRho6pWx9SG5ZtkaCCMQUKvf46x432po76DktK+RPDwQ00Uor1zj4nLMKY3bqboyQRmCUJntJ7
        Z5ZICz/Wi5ZeTQ4V3N+kqnkEzQfuHyAUqG5kHNISuJ8RUDNC2XrHgGMUdT4QcVJDdMJNHFjj9WAUrHQq
        Uwp6gcKEUPfEKM20TvKNxYa40xCrxulc2u7dXLaf6qQTNY4byWO0dmEFE225iFabxluGf2LgXFXAOJqD
        kVMHn4xR41LT/ULoNjmG7Co06JFSd1EjA6oaMtpKeC9uLR9YZHNb9INW+8HBVn2pa7c0hrjljUUXLjMw
        Ue0yM1ocULDwJpNZyjQ238kacLlmWb24fcUVtr61ugDDIHH6cnfYViN7Xg7PF40JUsD91MaEZEYH7lqv
        Lau8/Ewt9tS30/p/I3SdZG352+tqh7xLG3MSdOzs1P8A+7WlP+E5fV81fZktf5VEw/gc/wDz35KsrPUp
        RT7m+JxVpvk3HNZy0vKgUNRoUXtpi4DH2rltSDpVkyDkOJbN+rD4ydOqCn1IHljxtcNFrA8DSo1VS+46
        K6bU4O+VwSreMPQNdVsEQXba0OavRXDSaINc2s9rJskFD8rhkV3bXTmnywOVVTXsVW3cPOLHtG00rohl
        3x8sRdNbGpzLD+CmguA/B2BVprxTWnVTo0w0D7bkXPwPiW/Gw5hEIJmvO0H3qC54+O482O9OQ5PH4qoZ
        X2sgbPEY3Nw9UYsdRPDFrD9w22QsJBNW6qvecdb3I3tGyU6/moIbv1MDpj7fYrrXNfgTUDLFLK0DSYBm
        hu7N1JBVujhkpIrsGmJHUI4fTcNjwHA6OCGXnFA1ktjT/Z+Scp4eCYa1knguRgSr8VzG4AEEHrmsrulh
        eWvqCMwVbgvC2gBqOgSdQ5SadjmkVB3BQyCNx9Mt3A40OKo2l+NpdXLHaphcQteXud5OB8VPEYn2/lW2
        dRwzYUmXUsbg1+B6FSWsW4b92eIUr2MI82ggjHoh49Rz0Gkba3TNszA72oLf/wAec2slp5tz9M5+5EJr
        GcVdbS4H5HfgVDFfT27jHcNII6/gnVtac+hLqmZd8Jjea1Y9uYOBC7bcTtpUh9Mty1dzDx1+wGcenJo8
        YOHvQK+4e4tCXt/Wh+tgxHtC0Vlb0ZDTRA2dxBcDQ6gLr902gxcX9XKs0A4sOKikdQ+QwOFU4yNWC8Ez
        iDTyGtD+CtRzADyNcNM0CgmfGAK1aNFdiu8KODc9KCql4KVgn63nuJLhSm4AEg/kn/cND6VcSRgTp9iq
        BzpABRtBjgaEdk/qb8CHR9ziPemoE3OmW2ubIQMHOORxB+1PO6KPZVwDz8uvvKgbdxWccsstDQUYB9Wi
        DNvpbiQTXL21ODGD+ifHqL+RrBa5S/oWWsdS2TF2h9io+ozLSv3ZruLj73lOVbbWjd0myopgGj/cUV/9
        D52lax19PfTd89abMs++S044+Rj/AC/qnry16AyezueOIlZ5wnMdFdsuRDgCCr8Tmyt2OAcDoUK5HiJb
        ZxubPFubmKOWeNiuMKa+wftrsPbR2fZWWOcSNuXRZWw5HEaEYEahHLe6DwDWrhqs7VgqtpL1xbxXMbmS
        M3YZa+0LO3/Fy2h3t8oTiHfT7Vo2TtLauw0qpPF7KOG5rsD/AHUqzqU1Jj4LksO1/wBvZEoLskY4g5FL
        leFMf61q2rM3R6j2IXDM+J3kfDVXhqUCs1sPsIz3U6t7rohkrXRzAOacwhzJ4Xip1xqP6q1G9oILHbhn
        XNKDZOSKexmiAktqytGbPmAHTqnhu2FokIwJo/Qtp1CusLzi3Lr2UU1nDK4voGy6SN+Ko7a+9Eijt7E7
        LmOQAn3EHTqpQW7a1IBycMQUJIuIKumoGk4SD4Xfbkp47t4phXsOiUSBPc2cFy2kg3dHDBzUGuuPntXF
        8ZL49HgYj/II1DOZHnDa5nXCvuU42SOI30OPica4aURLWNidU/R9zLfupGA1buNNMEorrc/c6tK0OOVU
        YvOKhnaSz9KU108Cs5d2N7Zv/VY5jXZOGLT7wrrD9GZuVs1dhdsDAwGhGiuNkzodzc6dFlbG6OwNJIdS
        hcUVhvAAGmtRqodSk0w02StRXCnw0xTSsjkAa5ocD1xVOO6JIoMMlK2etWigd0IUwxwQyWLgT6DqUzYc
        vtUQfLE7y8aaFX2kluODs6hcujAaS/8AUpoU1bvkYHveKiuSZYSIpjjVvwn2hBJ2TWz/AE7uMjo4fCfY
        VqzECaxHYfocopomSsMdzGHNOe7+oK0rbpv8ybU6rH5GYAacWGo6J8G5tBVy84KSN++xcXtOUZwd7uqH
        iV7HFkrdrgcQR/UKonKyZy1h4O/Vd8viMqZKWO6lGRe739O6iAD8tV01pIAHieoSHI96900LKeJrX7lF
        bQ0ex0hrtUt5g4NAwBp9gUbCtEsQZN5bNZ/GeV4/jQ8PZ+rKRvmzNBk32Baj/wA5xtK+sPh3+6tF51Y2
        stzIGsrjqj//AK3JT/kPwbvfVVmIMv3JgiCVzHUPxDPuETjkbIA12I1VfmrF9ncl7BhWoVe2udRgNVne
        smnivGGRcpwjnO/dWNBIMXM6qlZcg5jix/i9po5p0K0LZ9wwy0Q/keHZd/8A6LfwuG9Mndiorbpb3NXT
        91fYu293vALTUa9FfilBAIOB0WPtbyWCUwzDY9poWHBGbW9D6UdmlagVt3DpeKivw5YoXyHDx3FZLYBk
        uo+V/tVmK4Dm1I9o6qQbnAllanJZ5qy4T2ZOj7aQse0scMHA5hWLe5a00GDtHjL3o/c8fFfxbZRtlb8M
        gzBWYvbO4spfTlGfwkfC4dlomrejFmoWinNccMKE1zVhsgc3yNANdUCgugMHnAYEfkrzZmtYCWkg/wDU
        KIiDRWCQe4eJo9vT8VBJYk1daODHVJLXA0r7slHDcs3BrXhpHw4adFajkNRIMsi76a6FIqZKfqvj2m4a
        1kgwDnOAD8cWh3RXmXEEoJ3NbtGLcnH7MV1IyCeNzHhrt2BjzFQhtxxjmvEsLSXRikcTqgU/zJPuwRh+
        gs9MhYSg0aauBFS3Itw7rqjJWbKNe04Fjs6ewoHG+4a/ZUUbjseKuadWkfirjb0gVc2pOROA9xCUC2Q3
        nBhu59rWM5+mT4+46Id680BMU7SCNHZhaOG5yDiRlQnEGqivLW3uRtlZicnNzb7PyTnuS69gXFftLaUJ
        p0wVqK6YSaPqDodEPvOMubWskZMkIx3Nzb/kFBDc7XAgAOpnonAuTWDQsuG/VtIy/wBFTtu43fEaimYO
        NUEjvGkgOIA6YUVhrw4eDshkD+amCsMLMmEtMC00xyoeuIUhMbm0cMDTxKEse8eVdp1FM/6KYTtBAcKg
        Z0/ujj2HgthkbXgtrh8qh5DjbPkWlzvCYYNlaMR/kNUwcHAbWkdwarm5vI7UbQKzag1AOFcOqEnOHkm6
        UZM3ecddWElJR4n4ZB8LlzHKMA/TUIw7lRcwuiuQGAuAAzJaPibigz2AOIb8NcK9Fspf1LJg8aeAlFbW
        t011ZKvca0TRcJcumDWN3N6qnbxSPkAZWvZbjgrWaOMF5J9q1rDUQY2bTmSXhuFbbMBc3yRr0m/dRdsw
        CdXCiDOcgnmbBt3buoPIZLBzxvtZnNcKDJwXpxAIoVl/5HxNQZ4x7VNq9R1cAGGYNFK40q3orbJgaOxr
        l7+qDtcY3GN2AOR6K5BNiAW1A07hYWqdfjv0ZPyfHQ37Q4eE7RVsoH3OQKOSa1mME4LZG/Ye4WpieC0B
        2ShvePi5CLbIA2n/ABvHxNPUKFaMPRpaqeVsp2t5Wjh5A4luSLwTgimh6f6zWTkjuLCf0Js/lePheOo7
        onaX7T4uPk3L80WrOiU42aFr8MTjo4ZHsVzcQ21zE6Kdu4O019re4VCC5L3EnXMaEfmrrC1pq40Dst2I
        9lVm1BeDM8lxctod+L4K0bLqOzlWgunwGgOGo6raEMcwBzQ5j/Fw9uGIWe5XgnQVntAXxYl0QxLR1b1C
        ut08WJeNaIRdGYhzdv8AlSlParMc9HAPAZpXqOlQgQrUOaR7VcgvHkbHuDOlfhVOpSsGw5hFWUGlCdPb
        orDHEAB7adnHH3IPFO5jqOIDjSgOLT9hqrbbpw8i7cR0wI92qmCkyxLDHM1we2rcAD0+w1Cp3Flc20Rd
        aj12GuFRUDtUf1V4Tsc3c9xaflJGQ6jNItdG7wdiTWgNKoHsoW9+5zCRVgbg5jxtIJ7UVuO7YKDGo+R3
        4VUkttHM0eoCx2IbKz4m9ih0wvLOhuGm6t6YTsHkzu4DMI3/AGFrfuF2vaSHZuOo/FUbvh7e5DpIj6M1
        a/7Xe0D8FT/8i6ZgZBQsGMkjfHxbpV2Klg5N2EbHUIwHrHc4djiDX/VU+LWsEtrsC57a4tXATMIGjxUt
        PvXTLosIOLvf+aPi9ifRs4Yd2Y197caoZe2fGuaZbWdsch/7Rrtceg+lGXtE47jR3jHjqTofwU7Hg6V7
        5miEteBg4Y9RmEv3bQ4x1Nehwr7E+L6C5wGWXFo0uZLIY3BtWkVFBo7DoqPIXLZLgvEvqE4Aior1NCqb
        3EubI40cdHY+/BQPc0OAbjK7Eu6dFar1JtaYC/AcVLzXKFo8bS3G6ZwyJr8I96L8h/FpY3l0I3N6Jfwv
        kmWjf2DYxSQ73SfMT3W4FHAGi2qk0c/ks016GT4jgPTIfK3HutPDC2NoACloBkElSUGbbYkkkyYjlRzw
        tmjLHCtVIkmBgef4k20pc0eBQm3lodjvjHwnr2Xo/JWMd3A5jhjTBefcpx8lrM5pFKHArK1TStizBcEx
        gmuNMOiIwOaW44kdVno7hzm0/wC43PuOqIWdwTnhuoeiwvU6qXlZL13Zw30LoZG1GbXDAg9Qs1PBPx8w
        iuMa/wDHMMnf3Woty+tS6gzK5u7SKeN0cwEjH/Kc69QoT44ei2lb4gi1uS5mGBGWP2hFre6FKkno4EY+
        8LP3VlNxzwSS63caMl6HRr+/dWbW7cRQmrqYKmkyVK2aKORlf0yB1AxUwNRQ4jqMwECjuvTfvAJ08R+C
        KwTse0H4XEfes3UqQdyvBCbdcWoDJji6PJsncdCs5I1zHFkjSHNJDmnAgrdVLwKVBFQR+IVHkuKgvo9w
        8Z2/DKP6O7Kq3jD0Lj1Rlo5jHQh1WimB0KuMlO4P3jHB1AcD1p0VO4t5rWYxTtLJBiDoe4KaO4dHjXzy
        qcvYVo11QJhqO6c2lPJo9n/xP4K3Fdskwk8W4UrStfagTJS4Ejxrm12I+1XIXPawHA0GLDqPtopaKVgs
        C+OTew7gflPxUUjntfQ4B/Q4Gn4qjC9tPF5HY0UvquqQ7I4F2f2KWpLTI5uNtnuL2MEcgO7xGBP+JwxQ
        e/4l0TXSMLxjWR8dXgd3sPkPcStCxxNMd2m6uSq3XLwWz3RsjEjxk6uSursnjJn5ODWfwM7Y3V0JHRuk
        EsQxca7g6mR8l2LmOWQhmNcn4D7kry4EtZvSYyUkYsFA6vVQxsb6bnMBxwr/AGWkTmNmEwsuYHbM2Rxr
        4k5dCkbJ0kgdUBhqX9qdFEWJ6ybdu40TiHgnl3JJnRg+BqaUAzCe1t5JpKN8nlRNainDRuN0wt0KcA7M
        1n8Z4GS3pPPg45BasCgoqdg53pNB6K5VaJQjCzliSSqkmIZJJKiAOE65TpgOgvO8Uy6hLmjzGRRpM5oc
        KHJJqQR5RdW74JSKUc0rqGYvGBo9uY/ELV/yPhw4GaJuIzosZLG+J9Rg4ZLG1ehtWwdtroOBxxwCvxzV
        aanFuvZZu1uQXA1o4YOb+IRGKfyDnEg5fasbVOilwrIyOZhilaHNfg5rsjVZzkONm455kjq+1B8XZln+
        XbujzZDSpJcBm7opiPVaWO1zriHBQm6/1NGkzPWk2pcK5konG6rS8UDyMu/XBDb/AIuS0eZ7fG3+Zo+T
        /wCq5hu9h3NpWmR07qsPKJyth6KdzWM0Oo1VmKQGpa2hrj37oVDcxyUa+hrnTSqtwucwgDFhwpX4fzUt
        FYZNeWdveRmOdu5p+E0oWnt0WV5Hi57B1T+pbnBsgH3OGhWubIS2oOIzCaWOKVm17QQRQg5EIrZ1+HYT
        UmEDnNIIP5KaOeUfNT6RXAohyvCvtiZ7UF0ObmZlg7dQg9entWyiylETDhhSG9p4vFAPm6JSctE0+nG7
        yIJ30Jb2GCowPZuG8kHSisG0Y1jp9wB+VrCK9iaohJ5QWbiE4JbjkXeiKbonkASNwo46bUNY9zy4uPgP
        J4A+4LiWRz6vIJODYyevVd09OMBwAJO49/bVWlCM8tnRpM6O3ptqau0AJyqVuWfxrj5OOjjtpBI8Nq6Q
        fM45n2LBRkjEZnEnUla3+KNuNxxIYdFVUpI8jbWGCOR4ie0eQ5pp1Q4sIzXqtzxsV1FtkaDUZrJ8l/FJ
        43l0Pk3om69jOtjMRxlzgAtd/HuM20kcFBxf8ek9QOlbSmi2NnaMhaAAiqHaxNAza0BTJAUSVmYkkqpq
        oAdMkkgDhIJk6YDpJk6AOJYmysLXCoKxn8h4T0nGWIeOoW2UF1bMuIy1wrVTZSNODyZ7XRPqMHBXbacP
        8q54EdER5zhn20he0VYckADnwv3N940IWTRrWwdimLSKOz+XMEIhG+gDmmuXiT0QGCdrhuGIOh69Fdt5
        nH2A1BKxtWMHRS8hbeJBtyzrXp0QLkrEwOM0ADYRi6MDFvcdkXjeCR7cdAujteS0ge9QsPBrhmft7jDy
        ADuv+s0Rhu9/i4muntGqp8nYutj68Q/SODmj5P7KCCQNO6pI6Vor3kzeA7FO7duyJHkPq7hWop2YNrTs
        dELguatqDl1Urpg9oc51AOmaTUj5BKRwplQ9OqA8pwokBuLRu1+b4hke7fyRRk4Aq51Wtych13zcEZPp
        AveMD0RWtk/0idlEMANcWmhwPU6FO6WShAoPrIz9nsVu8mt72IXUbdkwNJW0purqh5FCOoyK3j5Myb+a
        GMu1hoPKuA7dVzSSQhzz7ypmMhILnuJJ0A6aBXeO4995K0BpEYOCa9ES33cnPH2L7mVoAwXoPC8cLeJu
        GK54fhILdgO3HqjjI2sFAFaXUytY6aKBItacwnSVEHIiYMgE9AE6ZADpkkkAJNVJJACqklVKqAI065Tp
        gdJJk6AHSTJ0AVL6yjuYi1wrVYDmuKfaymg8dCvSkN5TjY7qFwIx0UWrJVWeYMe6B9RiPmb1V6CZraPa
        6rThTon5TjpLWZzSMNEOjkdC+vyn4mrN1k0Vg62ffQjHHPoVdjuA5tDQGuKBxTbKFuIdiCrcc+Jp7aLG
        1Tetwlg8bTj19hQPkuPdav8AWgB9LVv0f2RJty0EY54V0Ukku4UcNzaY6hJStF8kwLBdbSCK11Gf2K4y
        4aW4Ch1ByVK+sTCTLB/xHEtGbf7Km+cltNevZWlOiLYyWb2/dK/0YD41xp1VdzAw03VJFDTRRRMNR9pU
        9u2WaVsYaDLIQGjuTgriNGal7LY4+f8Aa/uNpLH4A/4qm6MjNepW3D2zOOhsxRzY2AE51dm4+8obJ/Dr
        V8u/dQV+FXxaRnzyzE8dxk13IAG+HVbziOGZbsFRirtnwttaABgyRBrQ0UCpVJtaRMYGigXSaqVVRA6V
        UySAHSTJVQAkkqpkAOmSSQAk1UiVzVADBJcAroJgdVTrmqdAHSS5qnqgB0jQihTVSqgARzPFR3URw8tC
        sByFi+2lc1wXqrgHChQDnOHZcxlzR5aFRZFJnnrJDGdp+A59lZbM4Yg9x7Fze2j4JHNeKUVZj9vi74ev
        RZusl1sXY7h2YOPRWor5oad5pT7ELL6KCSUu8QpVcmjsE5eWZUtjbuHU5IbJJE+TcBtDs2jIFVTI8tIA
        p1SYHEUJo1aKiRnzbLHqgEtadx6jJTQTujeHtNHjVVGt0GSM8RxE11I1xHgnAcu5uP45e3E1sz1TVH6o
        VxloLaIAYIluV/EyezuqVVxuCbcmBJVNVcbk25AEm5KoUW5LckBLVKoUW9NuQBNVNVRb0t6AJapqqIvT
        GRMCUuXO8KEyLj1UASNcpA5JJMQ9U9UkkhiqlVJJAC3JbkkkALcuH0cCCkkjAGc53h2zsL2DyCxF1bui
        eWOFCEklm9lor1IBactOyioQUkkho5DQMsapwCUkkxP8AlxnHvuJQS07R2W+4yybDG3xpgkkqqJhQOAF
        An9QJJKiRer3S9RJJMDn1Qm9YJJIAYzDqmMwSSSAXrCmab1h1SSQIb1h1S9cJJIDJyZwuXXA6pJJiyRP
        uR1Uf7kddUkkBk//2Q==
</value>
  </data>
</root>